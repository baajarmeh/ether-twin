import _createClass from "@babel/runtime/helpers/esm/createClass";
import _assertThisInitialized from "@babel/runtime/helpers/esm/assertThisInitialized";
import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
import createRPC, { wsRPC } from '@mainframe/rpc-browser';
import StreamRPC from '@mainframe/rpc-stream';
import BzzAPI from '@erebos/api-bzz-browser';
import PssAPI from '@erebos/api-pss';
import BaseClient, { createInstantiateAPI } from '@erebos/client-base';
var instantiateAPI = createInstantiateAPI(createRPC);

var BrowserClient =
/*#__PURE__*/
function (_BaseClient) {
  _inheritsLoose(BrowserClient, _BaseClient);

  function BrowserClient(config) {
    var _this;

    if (config.rpc == null && config.ws != null) {
      config.rpc = wsRPC(config.ws);
    }

    _this = _BaseClient.call(this, config) || this;

    _defineProperty(_assertThisInitialized(_this), "_bzz", void 0);

    _defineProperty(_assertThisInitialized(_this), "_pss", void 0);

    if (config.bzz != null) {
      if (config.bzz instanceof BzzAPI) {
        _this._bzz = config.bzz;
      } else {
        _this._bzz = new BzzAPI(config.bzz);
      }
    } else if (typeof config.http === 'string') {
      _this._bzz = new BzzAPI({
        url: config.http
      });
    } // $FlowFixMe: instance type


    _this._pss = instantiateAPI(config.pss, PssAPI);
    return _this;
  }

  _createClass(BrowserClient, [{
    key: "bzz",
    get: function get() {
      if (this._bzz == null) {
        throw new Error('Missing Bzz instance or HTTP URL');
      }

      return this._bzz;
    }
  }, {
    key: "pss",
    get: function get() {
      if (this._pss == null) {
        this._pss = new PssAPI(this.rpc);
      }

      return this._pss;
    }
  }]);

  return BrowserClient;
}(BaseClient);

export { BrowserClient as default };
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = exports.createInstantiateAPI = void 0;

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var createInstantiateAPI = function createInstantiateAPI(createRPC) {
  return function instantiateAPI(maybeInstance, Cls) {
    if (maybeInstance != null) {
      return maybeInstance instanceof Cls ? maybeInstance : // $FlowFixMe: instance type
      new Cls(createRPC(maybeInstance));
    }
  };
};

exports.createInstantiateAPI = createInstantiateAPI;

var BaseClient =
/*#__PURE__*/
function () {
  function BaseClient(config) {
    if (config === void 0) {
      config = {};
    }

    (0, _defineProperty2.default)(this, "_rpc", void 0);
    this._rpc = config.rpc;
  }

  var _proto = BaseClient.prototype;

  _proto.disconnect = function disconnect() {
    // $FlowFixMe: disconnect method is only present in StreamRPC
    if (this._rpc != null && typeof this._rpc.disconnect === 'function') {
      this._rpc.disconnect();
    }
  };

  (0, _createClass2.default)(BaseClient, [{
    key: "rpc",
    get: function get() {
      if (this._rpc == null) {
        throw new Error('Could not access RPC: missing in configuration provided to client');
      }

      return this._rpc;
    }
  }]);
  return BaseClient;
}();

exports.default = BaseClient;
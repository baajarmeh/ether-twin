import _createClass from "@babel/runtime/helpers/esm/createClass";
import _defineProperty from "@babel/runtime/helpers/esm/defineProperty";
export var createInstantiateAPI = function createInstantiateAPI(createRPC) {
  return function instantiateAPI(maybeInstance, Cls) {
    if (maybeInstance != null) {
      return maybeInstance instanceof Cls ? maybeInstance : // $FlowFixMe: instance type
      new Cls(createRPC(maybeInstance));
    }
  };
};

var BaseClient =
/*#__PURE__*/
function () {
  function BaseClient(config) {
    if (config === void 0) {
      config = {};
    }

    _defineProperty(this, "_rpc", void 0);

    this._rpc = config.rpc;
  }

  var _proto = BaseClient.prototype;

  _proto.disconnect = function disconnect() {
    // $FlowFixMe: disconnect method is only present in StreamRPC
    if (this._rpc != null && typeof this._rpc.disconnect === 'function') {
      this._rpc.disconnect();
    }
  };

  _createClass(BaseClient, [{
    key: "rpc",
    get: function get() {
      if (this._rpc == null) {
        throw new Error('Could not access RPC: missing in configuration provided to client');
      }

      return this._rpc;
    }
  }]);

  return BaseClient;
}();

export { BaseClient as default };
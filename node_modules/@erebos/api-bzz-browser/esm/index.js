import _extends from "@babel/runtime/helpers/esm/extends";
import _objectWithoutPropertiesLoose from "@babel/runtime/helpers/esm/objectWithoutPropertiesLoose";
import _inheritsLoose from "@babel/runtime/helpers/esm/inheritsLoose";

/* eslint-env browser */
import BaseBzz from '@erebos/api-bzz-base';

var Bzz =
/*#__PURE__*/
function (_BaseBzz) {
  _inheritsLoose(Bzz, _BaseBzz);

  function Bzz(config) {
    var _this;

    var url = config.url,
        cfg = _objectWithoutPropertiesLoose(config, ["url"]);

    _this = _BaseBzz.call(this, _extends({}, cfg, {
      url: new URL(url).href
    })) || this;
    _this._fetch = window.fetch.bind(window);
    return _this;
  }

  var _proto = Bzz.prototype;

  _proto.uploadDirectory = function uploadDirectory(directory, options) {
    if (options === void 0) {
      options = {};
    }

    var form = new FormData();
    Object.keys(directory).forEach(function (key) {
      form.append(key, new Blob([directory[key].data], {
        type: directory[key].contentType
      }), key);
    });

    if (options.defaultPath != null) {
      var file = directory[options.defaultPath];

      if (file != null) {
        form.append('', new Blob([file.data], {
          type: file.contentType
        }), '');
      }
    }

    return this._upload(form, options);
  };

  return Bzz;
}(BaseBzz);

export { Bzz as default };
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.pubKeyToAddress = exports.hash = void 0;

var _hex = _interopRequireDefault(require("@erebos/hex"));

var _jsSha = _interopRequireDefault(require("js-sha3"));

var hash = function hash(value) {
  return _jsSha.default.keccak256.array(value);
};

exports.hash = hash;

var pubKeyToAddress = function pubKeyToAddress(pubKey) {
  var key = Array.isArray(pubKey) ? pubKey : (0, _hex.default)(pubKey).toBuffer(); // If key length 65-byte long, first byte should be removed

  var value = key.length === 65 ? key.slice(1) : key; // Ethereum address is the last 20 bytes of the hashed public key

  var address = Buffer.from(hash(value).slice(-20));
  return (0, _hex.default)(address).value;
};

exports.pubKeyToAddress = pubKeyToAddress;
/// <reference types="node" />
import { IpcSocketConnectOpts, Socket } from 'net';
import { NextObserver, ReplaySubject, Subject, Subscriber, Subscription } from 'rxjs';
import { AnonymousSubject } from 'rxjs/internal/Subject';
export interface Config extends IpcSocketConnectOpts {
    closeObserver?: NextObserver<boolean> | undefined | null;
    openObserver?: NextObserver<void> | undefined | null;
    path: string;
}
export declare class SocketSubject<T> extends AnonymousSubject<T> {
    protected _config: Config;
    protected _output: Subject<T>;
    protected _socket: Socket | null;
    destination: ReplaySubject<T> | Subscriber<T>;
    constructor(pathOrConfig: string | Config);
    _subscribe(subscriber: Subscriber<T>): Subscription;
    unsubscribe(): void;
    protected _connectSocket(): void;
    protected _reset(): void;
}
